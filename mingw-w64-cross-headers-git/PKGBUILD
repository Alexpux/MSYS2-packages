# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Martell Malone <martellmalone@gmail.com>

_realname=headers
_mingw_suff=mingw-w64-cross
pkgname=("${_mingw_suff}-${_realname}-git")
replaces="${_mingw_suff}-${_realname}"
provides=("${_mingw_suff}-${_realname}")
conflicts=("${_mingw_suff}-${_realname}")
pkgdesc="MinGW-w64 headers for cross-compiler"
pkgver=5.0.0.4592.90b8472
pkgrel=1
arch=('i686' 'x86_64')
url="http://mingw-w64.sourceforge.net"
license=('custom')
groups=("${_mingw_suff}-toolchain" "${_mingw_suff}")
makedepends=('git')
options=('!strip' '!libtool' '!emptydirs' '!buildflags')
source=("mingw-w64"::"git://git.code.sf.net/p/mingw-w64/mingw-w64"
        "0001-Update-to-support-builtins-where-fms-extensions-is-b.patch"
        "0002-crt-fix-_MINGW_UDERSCORE_PREFIX-for-arm.patch")
md5sums=('SKIP'
         'd5b755ad7ae1ebc848071eeb10ca54f6'
         '48aeaef05f85e36fd172b61fd039d8ca')

_targets="i686-w64-mingw32 x86_64-w64-mingw32 armv7-w64-mingw32"

pkgver() {
  cd "${srcdir}/mingw-w64"
  local _major=$(head -n 16 mingw-w64-headers/crt/_mingw_mac.h | grep '__MINGW64_VERSION_MAJOR' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _minor=$(head -n 16 mingw-w64-headers/crt/_mingw_mac.h | grep '__MINGW64_VERSION_MINOR' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _rev=0
  printf "%s.%s.%s.%s.%s" ${_major} ${_minor} ${_rev} "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "${srcdir}/mingw-w64"
  #git am "${srcdir}/"0001-Update-to-support-builtins-where-fms-extensions-is-b.patch
  git am "${srcdir}/"0002-crt-fix-_MINGW_UDERSCORE_PREFIX-for-arm.patch
}

build() {
  for _target in ${_targets}; do
    msg "Configuring ${_target} headers"
    mkdir -p ${srcdir}/headers-${_target} && cd ${srcdir}/headers-${_target}
    ${srcdir}/mingw-w64/mingw-w64-headers/configure \
    --build=${CHOST} \
    --host=${_target} \
    --prefix=/opt/${_target} \
    --enable-sdk=all \
    --enable-secure-api
  done
}

package() {
  for _target in ${_targets}; do
    msg "Installing ${_target} headers"
    cd ${srcdir}/headers-${_target}
    make DESTDIR=${pkgdir} install

    rm ${pkgdir}/opt/${_target}/include/pthread_signal.h
    rm ${pkgdir}/opt/${_target}/include/pthread_time.h
    rm ${pkgdir}/opt/${_target}/include/pthread_unistd.h
  done
}
