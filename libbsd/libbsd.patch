diff -uprN libbsd-0.8.3.bk/include/bsd/stdio.h libbsd-0.8.3/include/bsd/stdio.h
--- libbsd-0.8.3.bk/include/bsd/stdio.h	2015-09-23 13:59:34.000000000 +0800
+++ libbsd-0.8.3/include/bsd/stdio.h	2017-04-13 21:13:34.356859500 +0800
@@ -51,23 +51,6 @@ char *fgetln(FILE *fp, size_t *lenp)
 	                          "use getline(3) instead, as it is supported "
 	                          "by GNU and POSIX.1-2008.")));
 
-/*
- * Note: We diverge from the FreeBSD, OpenBSD and DragonFlyBSD declarations,
- * because seekfn() there wrongly uses fpos_t, assuming it's an integral
- * type, and any code using that on a system where fpos_t is a struct
- * (such as GNU-based systems or NetBSD) will fail to build. In which case,
- * as the code has to be modified anyway, we might just as well use the
- * correct declaration here.
- */
-FILE *funopen(const void *cookie,
-              int (*readfn)(void *cookie, char *buf, int size),
-              int (*writefn)(void *cookie, const char *buf, int size),
-              off_t (*seekfn)(void *cookie, off_t offset, int whence),
-              int (*closefn)(void *cookie));
-
-#define fropen(cookie, fn) funopen(cookie, fn, NULL, NULL, NULL)
-#define fwopen(cookie, fn) funopen(cookie, NULL, fn, NULL, NULL)
-
 int fpurge(FILE *fp);
 __END_DECLS
 
diff -uprN libbsd-0.8.3.bk/src/funopen.c libbsd-0.8.3/src/funopen.c
--- libbsd-0.8.3.bk/src/funopen.c	2015-09-23 01:56:09.000000000 +0800
+++ libbsd-0.8.3/src/funopen.c	2017-04-13 21:14:27.358653400 +0800
@@ -97,46 +97,6 @@ funopen_close(void *cookie)
 	return rc;
 }
 
-FILE *
-funopen(const void *cookie,
-        int (*readfn)(void *cookie, char *buf, int size),
-        int (*writefn)(void *cookie, const char *buf, int size),
-        off_t (*seekfn)(void *cookie, off_t offset, int whence),
-        int (*closefn)(void *cookie))
-{
-	struct funopen_cookie *cookiewrap;
-	cookie_io_functions_t funcswrap = {
-		.read = funopen_read,
-		.write = funopen_write,
-		.seek = funopen_seek,
-		.close = funopen_close,
-	};
-	const char *mode;
-
-	if (readfn) {
-		if (writefn == NULL)
-			mode = "r";
-		else
-			mode = "r+";
-	} else if (writefn) {
-		mode = "w";
-	} else {
-		errno = EINVAL;
-		return NULL;
-	}
-
-	cookiewrap = malloc(sizeof(*cookiewrap));
-	if (cookiewrap == NULL)
-		return NULL;
-
-	cookiewrap->orig_cookie = (void *)cookie;
-	cookiewrap->readfn = readfn;
-	cookiewrap->writefn = writefn;
-	cookiewrap->seekfn = seekfn;
-	cookiewrap->closefn = closefn;
-
-	return fopencookie(cookiewrap, mode, funcswrap);
-}
 #else
 #error "Function funopen() needs to be ported."
 #endif
