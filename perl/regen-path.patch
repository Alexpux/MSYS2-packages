--- perl-5.24.1/cpan/Compress-Raw-Bzip2/Makefile.PL
+++ perl-5.24.1/cpan/Compress-Raw-Bzip2/Makefile.PL
@@ -3,6 +3,7 @@
 use strict ;
 require 5.006 ;
 
+use lib '.';
 use private::MakeUtil;
 use ExtUtils::MakeMaker 5.16 ;
 
--- perl-5.24.1/cpan/Compress-Raw-Zlib/Makefile.PL
+++ perl-5.24.1/cpan/Compress-Raw-Zlib/Makefile.PL
@@ -3,6 +3,7 @@
 use strict ;
 require 5.006 ;
 
+use lib '.';
 use private::MakeUtil;
 use ExtUtils::MakeMaker 5.16 ;
 use ExtUtils::Install (); # only needed to check for version
--- perl-5.24.1/cpan/IO-Compress/Makefile.PL
+++ perl-5.24.1/cpan/IO-Compress/Makefile.PL
@@ -5,6 +5,7 @@ require 5.006 ;
 
 $::VERSION = '2.069' ;
 
+use lib '.';
 use private::MakeUtil;
 use ExtUtils::MakeMaker 5.16 ;
 
--- perl-5.24.1/cpan/Digest-MD5/MD5.xs
+++ perl-5.24.1/cpan/Digest-MD5/MD5.xs
@@ -156,7 +156,7 @@ STATIC int dup_md5_ctx(pTHX_ MAGIC *mg, CLONE_PARAMS *params)
 #endif
 
 #if defined(MGf_DUP) && defined(USE_ITHREADS)
-const STATIC MGVTBL vtbl_md5 = {
+STATIC const MGVTBL vtbl_md5 = {
     NULL, /* get */
     NULL, /* set */
     NULL, /* len */
@@ -168,7 +168,7 @@ const STATIC MGVTBL vtbl_md5 = {
 };
 #else
 /* declare as 5 member, not normal 8 to save image space*/
-const STATIC struct {
+STATIC const struct {
 	int (*svt_get)(SV* sv, MAGIC* mg);
 	int (*svt_set)(SV* sv, MAGIC* mg);
 	U32 (*svt_len)(SV* sv, MAGIC* mg);
@@ -788,7 +788,7 @@ md5(...)
     PPCODE:
 	MD5Init(&ctx);
 
-	if (PL_dowarn & G_WARN_ON) {
+	if ((PL_dowarn & G_WARN_ON) || ckWARN(WARN_SYNTAX)) {
             const char *msg = 0;
 	    if (items == 1) {
 		if (SvROK(ST(0))) {
--- perl-5.24.1/dist/PathTools/Cwd.xs
+++ perl-5.24.1/dist/PathTools/Cwd.xs
@@ -424,7 +424,7 @@ int Perl_getcwd_sv(pTHX_ SV *sv)
 #endif
 
 #if USE_MY_CXT
-# define MY_CXT_KEY "Cwd::_guts"XS_VERSION
+# define MY_CXT_KEY "Cwd::_guts" XS_VERSION
 typedef struct {
     SV *empty_string_sv, *slash_string_sv;
 } my_cxt_t;
--- perl-5.24.1/dist/PathTools/Makefile.PL
+++ perl-5.24.1/dist/PathTools/Makefile.PL
@@ -1,5 +1,5 @@
 
-BEGIN { @INC = grep {!/blib/} @INC }
+BEGIN { @INC = grep { $_ ne "blib/arch" and $_ ne "blib/lib" } @INC }
 
 require 5.005;
 use ExtUtils::MakeMaker;
--- perl-5.24.1/dist/Time-HiRes/Makefile.PL
+++ perl-5.24.1/dist/Time-HiRes/Makefile.PL
@@ -290,6 +290,7 @@ sub has_clock_xxx_syscall {
 #include "EXTERN.h"
 #include "perl.h"
 #include "XSUB.h"
+#include <time.h>
 #include <$SYSCALL_H>
 int main(int argc, char** argv)
 {
@@ -309,6 +310,7 @@ sub has_clock_xxx {
 #include "EXTERN.h"
 #include "perl.h"
 #include "XSUB.h"
+#include <time.h>
 int main(int argc, char** argv)
 {
     struct timespec ts;
@@ -325,6 +327,7 @@ sub has_clock {
 #include "EXTERN.h"
 #include "perl.h"
 #include "XSUB.h"
+#include <time.h>
 int main(int argc, char** argv)
 {
     clock_t tictoc;
--- perl-5.24.1/ext/POSIX/POSIX.xs
+++ perl-5.24.1/ext/POSIX/POSIX.xs
@@ -1208,7 +1208,7 @@ static void S_setpayload(NV* nvp, NV_PAYLOAD_TYPE payload, bool signaling)
 #endif
 #ifdef NV_PAYLOAD_DEBUG
   for (i = 0; i < (int)C_ARRAY_LENGTH(a); i++) {
-    Perl_warn(aTHX_ "a[%d] = 0x%"UVxf"\n", i, a[i]);
+    Perl_warn(aTHX_ "a[%d] = 0x%" UVxf "\n", i, a[i]);
   }
 #endif
   for (i = 0; i < (int)sizeof(p); i++) {
@@ -1219,7 +1219,7 @@ static void S_setpayload(NV* nvp, NV_PAYLOAD_TYPE payload, bool signaling)
       ((U8 *)(nvp))[i] &= ~m[i]; /* For NaNs with non-zero payload bits. */
       ((U8 *)(nvp))[i] |= b;
 #ifdef NV_PAYLOAD_DEBUG
-      Perl_warn(aTHX_ "set p[%2d] = %02x (i = %d, m = %02x, s = %2d, b = %02x, u = %08"UVxf")\n", i, ((U8 *)(nvp))[i], i, m[i], s, b, u);
+      Perl_warn(aTHX_ "set p[%2d] = %02x (i = %d, m = %02x, s = %2d, b = %02x, u = %08" UVxf ")\n", i, ((U8 *)(nvp))[i], i, m[i], s, b, u);
 #endif
       a[p[i] / UVSIZE] &= ~u;
     }
@@ -1236,7 +1236,7 @@ static void S_setpayload(NV* nvp, NV_PAYLOAD_TYPE payload, bool signaling)
 #endif
   for (i = 0; i < (int)C_ARRAY_LENGTH(a); i++) {
     if (a[i]) {
-      Perl_warn(aTHX_ "payload lost bits (%"UVxf")", a[i]);
+      Perl_warn(aTHX_ "payload lost bits (%" UVxf ")", a[i]);
       break;
     }
   }
@@ -1267,7 +1267,7 @@ static NV_PAYLOAD_TYPE S_getpayload(NV nv)
   }
   for (i = (int)C_ARRAY_LENGTH(a) - 1; i >= 0; i--) {
 #ifdef NV_PAYLOAD_DEBUG
-    Perl_warn(aTHX_ "a[%d] = %"UVxf"\n", i, a[i]);
+    Perl_warn(aTHX_ "a[%d] = %" UVxf "\n", i, a[i]);
 #endif
     payload *= UV_MAX;
     payload += a[i];
--- perl-5.24.1/ext/XS-APItest/Makefile.PL
+++ perl-5.24.1/ext/XS-APItest/Makefile.PL
@@ -58,7 +58,8 @@ sub MY::postamble
 DTRACE_D = ../../perldtrace.d
 
 dtrace\$(OBJ_EXT): \$(DTRACE_D) core\$(OBJ_EXT)
-	$Config{dtrace} -G -s \$(DTRACE_D) -o dtrace\$(OBJ_EXT) core\$(OBJ_EXT)
+	$Config{dtrace} -G -s \$(DTRACE_D) -o dtrace\$(OBJ_EXT) core\$(OBJ_EXT) || \\
+	  ( \$(ECHO) >dtrace.c && \$(CCCMD) \$(CCCDLFLAGS) dtrace.c && rm -f dtrace.c )
 POSTAMBLE
 
     return $post;
--- perl-5.24.1/lib/B/Deparse.t
+++ perl-5.24.1/lib/B/Deparse.t
@@ -7,7 +7,7 @@ BEGIN {
         print "1..0 # Skip -- Perl configured without B module\n";
         exit 0;
     }
-    require 'test.pl';
+    require './test.pl';
 }
 
 use warnings;
--- perl-5.24.1/utils/Makefile.PL	Sat Feb 18 19:06:04 2017
+++ perl-5.24.1/utils/Makefile.PL	Tue Jan 17 08:34:48 2017
@@ -13,7 +13,7 @@
 # attempting to move the work from them to the extension directories and
 # ExtUtils::MakeMaker.
 
-require 'regen/regen_lib.pl';
+require './regen/regen_lib.pl';
 
 my $target = 'utils/Makefile';
 print "Extracting $target (with variable substitutions)\n";
--- perl-5.24.1/regen/ebcdic.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/ebcdic.pl	Sat Jan 14 13:52:29 2017
@@ -4,8 +4,8 @@
 
 BEGIN { unshift @INC, '.' }
 
-require 'regen/regen_lib.pl';
-require 'regen/charset_translations.pl';
+require './regen/regen_lib.pl';
+require './regen/charset_translations.pl';
 
 # Generates the EBCDIC translation tables that were formerly hard-coded into
 # utfebcdic.h
--- perl-5.24.1/regen/embed.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/embed.pl	Sat Jan 14 13:52:29 2017
@@ -26,8 +26,8 @@
 
 BEGIN {
     # Get function prototypes
-    require 'regen/regen_lib.pl';
-    require 'regen/embed_lib.pl';
+    require './regen/regen_lib.pl';
+    require './regen/embed_lib.pl';
 }
 
 my $unflagged_pointers;
--- perl-5.24.1/regen/feature.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/feature.pl	Sat Jan 14 13:52:29 2017
@@ -11,7 +11,7 @@
 # This script is normally invoked from regen.pl.
 
 BEGIN {
-    require 'regen/regen_lib.pl';
+    require './regen/regen_lib.pl';
     push @INC, './lib';
 }
 use strict ;
--- perl-5.24.1/regen/keywords.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/keywords.pl	Sat Jan 14 13:52:29 2017
@@ -11,7 +11,7 @@
 use strict;
 use Devel::Tokenizer::C 0.05;
 
-require 'regen/regen_lib.pl';
+require './regen/regen_lib.pl';
 
 my $h = open_new('keywords.h', '>',
 		 { by => 'regen/keywords.pl', from => 'its data',
--- perl-5.24.1/regen/lib_cleanup.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/lib_cleanup.pl	Sat Jan 14 13:52:29 2017
@@ -1,7 +1,7 @@
 #!perl -w
 use strict;
-require 'regen/regen_lib.pl';
-require 'Porting/pod_lib.pl';
+require './regen/regen_lib.pl';
+require './Porting/pod_lib.pl';
 use vars qw($TAP $Verbose);
 
 # For processing later
--- perl-5.24.1/regen/miniperlmain.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/miniperlmain.pl	Sat Jan 14 13:52:29 2017
@@ -4,7 +4,7 @@
 
 BEGIN {
     # Get function prototypes
-    require 'regen/regen_lib.pl';
+    require './regen/regen_lib.pl';
     unshift @INC, 'ext/ExtUtils-Miniperl/lib';
 }
 
--- perl-5.24.1/regen/mk_invlists.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/mk_invlists.pl	Sat Jan 14 13:52:29 2017
@@ -8,8 +8,8 @@
                     prop_invlist
                     prop_invmap search_invlist
                    );
-require 'regen/regen_lib.pl';
-require 'regen/charset_translations.pl';
+require './regen/regen_lib.pl';
+require './regen/charset_translations.pl';
 
 # This program outputs charclass_invlists.h, which contains various inversion
 # lists in the form of C arrays that are to be used as-is for inversion lists.
--- perl-5.24.1/regen/mk_PL_charclass.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/mk_PL_charclass.pl	Sat Jan 14 13:52:29 2017
@@ -2,8 +2,8 @@
 use v5.15.8;
 use strict;
 use warnings;
-require 'regen/regen_lib.pl';
-require 'regen/charset_translations.pl';
+require './regen/regen_lib.pl';
+require './regen/charset_translations.pl';
 
 # This program outputs l1_charclass_tab.h, which defines the guts of the
 # PL_charclass table.  Each line is a bit map of properties that the Unicode
--- perl-5.24.1/regen/opcode.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/opcode.pl	Sat Jan 14 13:52:29 2017
@@ -20,7 +20,7 @@
 
 BEGIN {
     # Get function prototypes
-    require 'regen/regen_lib.pl';
+    require './regen/regen_lib.pl';
 }
 
 my $oc = open_new('opcode.h', '>',
@@ -915,7 +915,7 @@
 # which define what bits in op_private have what meanings for each op.
 # It populates %LABELS, %DEFINES, %FLAGS, %BITFIELDS.
 
-require 'regen/op_private';
+require './regen/op_private';
 
 #use Data::Dumper;
 #print Dumper \%LABELS, \%DEFINES, \%FLAGS, \%BITFIELDS;
--- perl-5.24.1/regen/overload.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/overload.pl	Sat Jan 14 13:52:29 2017
@@ -16,7 +16,7 @@
 
 BEGIN {
     # Get function prototypes
-    require 'regen/regen_lib.pl';
+    require './regen/regen_lib.pl';
 }
 
 use strict;
--- perl-5.24.1/regen/reentr.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/reentr.pl	Sat Jan 14 13:52:29 2017
@@ -18,7 +18,7 @@
 
 BEGIN {
     # Get function prototypes
-    require 'regen/regen_lib.pl';
+    require './regen/regen_lib.pl';
 }
 
 use strict;
--- perl-5.24.1/regen/regcharclass.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/regcharclass.pl	Sat Jan 14 13:52:29 2017
@@ -11,9 +11,9 @@ our $hex_fmt= "0x%02X";
 sub DEBUG () { 0 }
 $|=1 if DEBUG;
 
-require 'regen/regen_lib.pl';
-require 'regen/charset_translations.pl';
-require "regen/regcharclass_multi_char_folds.pl";
+require './regen/regen_lib.pl';
+require './regen/charset_translations.pl';
+require "./regen/regcharclass_multi_char_folds.pl";
 
 =head1 NAME
 
--- perl-5.24.1/regen/regcomp.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/regcomp.pl	Sat Jan 14 13:52:29 2017
@@ -20,7 +20,7 @@
 
 BEGIN {
     # Get function prototypes
-    require 'regen/regen_lib.pl';
+    require './regen/regen_lib.pl';
 }
 use strict;
 
--- perl-5.24.1/regen/uconfig_h.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/uconfig_h.pl	Sat Jan 14 13:52:29 2017
@@ -10,7 +10,7 @@
 
 use strict;
 use Config;
-require 'regen/regen_lib.pl';
+require './regen/regen_lib.pl';
 
 my ($uconfig_h, $uconfig_h_new, $config_h_sh)
     = ('uconfig.h', 'uconfig.h-new', 'config_h.SH');
--- perl-5.24.1/regen/unicode_constants.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/unicode_constants.pl	Sat Jan 14 13:52:29 2017
@@ -1,8 +1,8 @@
 use v5.16.0;
 use strict;
 use warnings;
-require 'regen/regen_lib.pl';
-require 'regen/charset_translations.pl';
+require './regen/regen_lib.pl';
+require './regen/charset_translations.pl';
 use Unicode::UCD;
 use charnames qw(:loose);
 
--- perl-5.24.1/regen/warnings.pl	Sat Feb 18 19:05:54 2017
+++ perl-5.24.1/regen/warnings.pl	Mon Jan 23 21:59:53 2017
@@ -19,7 +19,7 @@
 $VERSION = '1.36';
 
 BEGIN {
-    require 'regen/regen_lib.pl';
+    require './regen/regen_lib.pl';
     push @INC, './lib';
 }
 use strict ;
--- perl-5.24.1/Porting/bench.pl
+++ perl-5.24.1/Porting/bench.pl
@@ -1315,7 +1315,7 @@ EOF
         },
     );
 
-    for ('t', '.') {
+    for ('./t', '.') {
         last if require "$_/test.pl";
     }
     plan(@tests / 3 * keys %VALID_FIELDS);
--- perl-5.24.1/Porting/bisect.pl
+++ perl-5.24.1/Porting/bisect.pl
@@ -61,7 +61,7 @@ if (!defined $jobs &&
         while (<$fh>) {
             ++$cpus if /^processor\s+:\s+\d+$/;
         }
-    } elsif (-x '/sbin/sysctl') {
+    } elsif (-x '/sbin/sysctl' || -x '/usr/sbin/sysctl') {
         $cpus =  $1 if `/sbin/sysctl hw.ncpu` =~ /^hw\.ncpu: (\d+)$/;
     } elsif (-x '/usr/bin/getconf') {
         $cpus = $1 if `/usr/bin/getconf _NPROCESSORS_ONLN` =~ /^(\d+)$/;
--- perl-5.24.1/Porting/checkcfgvar.pl	Sat Feb 18 19:05:51 2017
+++ perl-5.24.1/Porting/checkcfgvar.pl	Sat Jan 14 13:51:21 2017
@@ -36,7 +36,7 @@
 
 $default and $default =~ s/^'(.*)'$/$1/; # Will be quoted on generation
 
-require 'regen/regen_lib.pl' if $opt_r;
+require './regen/regen_lib.pl' if $opt_r;
 
 my $MASTER_CFG = "config_h.SH";
 # Inclusive bounds on the main part of the file, $section == 1 below:
--- perl-5.24.1/Porting/cmpVERSION.pl
+++ perl-5.24.1/Porting/cmpVERSION.pl
@@ -83,6 +83,7 @@
 @skip{
     'cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/Setup/BFD.pm', # just a test module
     'cpan/ExtUtils-MakeMaker/t/lib/MakeMaker/Test/Setup/XS.pm',  # just a test module
+    'cpan/IO-Compress/lib/File/GlobMapper.pm', # upstream needs to supply $VERSION
     'cpan/Math-BigInt/t/Math/BigFloat/Subclass.pm', # just a test module
     'cpan/Math-BigInt/t/Math/BigInt/BareCalc.pm',   # just a test module
     'cpan/Math-BigInt/t/Math/BigInt/Scalar.pm',     # just a test module
--- perl-5.24.1/Porting/corelist.pl
+++ perl-5.24.1/Porting/corelist.pl
@@ -99,7 +99,7 @@ find(
         /(\.pm|_pm\.PL)$/ or return;
         /PPPort\.pm$/ and return;
         my $module = $File::Find::name;
-        $module =~ /\b(demo|t|private)\b/ and return;    # demo or test modules
+        $module =~ /\b(demo|t|private|corpus)\b/ and return;    # demo or test modules
         my $version = MM->parse_version($_);
         defined $version or $version = 'undef';
         $version =~ /\d/ and $version = "'$version'";
--- perl-5.24.1/Porting/makemeta
+++ perl-5.24.1/Porting/makemeta
@@ -61,7 +61,7 @@
 
 BEGIN {
     # Get function prototypes
-    require 'regen/regen_lib.pl';
+    require './regen/regen_lib.pl';
 }
 
 use Maintainers qw(%Modules get_module_files get_module_pat);
--- perl-5.24.1/Porting/new-perldelta.pl	Sat Feb 18 19:05:52 2017
+++ perl-5.24.1/Porting/new-perldelta.pl	Sat Jan 14 13:51:21 2017
@@ -4,7 +4,7 @@
 # This needs to be able to run from a clean checkout, hence assume only system
 # perl, which may be too old to have autodie
 
-require 'Porting/pod_lib.pl';
+require './Porting/pod_lib.pl';
 
 my $state = get_pod_metadata(1);
 my (undef, $old_major, $old_minor) = @{$state->{delta_version}};
--- perl-5.24.1/Porting/sync-with-cpan
+++ perl-5.24.1/Porting/sync-with-cpan
@@ -142,7 +142,7 @@
 
 use autodie;
 
-require "Porting/Maintainers.pl";
+require "./Porting/Maintainers.pl";
 
 my %IGNORABLE    = map {$_ => 1} @IGNORABLE;
 
--- perl-5.24.1/pod/buildtoc	Sat Feb 18 19:05:47 2017
+++ perl-5.24.1/pod/buildtoc	Sat Jan 14 13:52:26 2017
@@ -14,7 +14,7 @@
 BEGIN {
   my $Top = File::Spec->catdir($FindBin::Bin, File::Spec->updir);
   chdir $Top or die "Can't chdir to $Top: $!";
-  require 'Porting/pod_lib.pl';
+  require './Porting/pod_lib.pl';
 }
 
 die "$0: Usage: $0 [--quiet]\n"
--- perl-5.24.1/pod/perlmodlib.PL	Sat Feb 18 19:05:49 2017
+++ perl-5.24.1/pod/perlmodlib.PL	Sat Jan 14 13:52:28 2017
@@ -13,7 +13,7 @@
     chdir $workdir
         or die "Couldn't chdir to '$workdir': $!";
 }
-require 'regen/regen_lib.pl';
+require './regen/regen_lib.pl';
 
 # MANIFEST itself is Unix style filenames, so we have to assume that Unix style
 # filenames will work.
--- perl-5.24.1/t/thread_it.pl
+++ perl-5.24.1/t/thread_it.pl
@@ -19,7 +19,7 @@
 die "Can't figure out which test to run from filename '$caller'"
     unless $caller =~ m!((?:op|re)/[-_a-z0-9A-Z]+)_thr\.t\z!;
 
-my $file = "$1.t";
+my $file = "./$1.t";
 
 $::running_as_thread = "running tests in a new thread";
 require $file;
--- perl-5.24.1/t/uni/upper.t
+++ perl-5.24.1/t/uni/upper.t
@@ -4,7 +4,7 @@ BEGIN {
       print("1..0 # miniperl: no Unicode::Normalize");
       exit(0);
     }
-    require "uni/case.pl";
+    require "./uni/case.pl";
 }
 
 use feature 'unicode_strings';
--- perl-5.24.1/h2pl/cbreak.pl	Sat Feb 18 19:05:35 2017
+++ perl-5.24.1/h2pl/cbreak.pl	Sat Jan 14 13:52:22 2017
@@ -12,7 +12,7 @@
     local($on) = @_;
 
     require 'sizeof.ph';
-    require 'sys/ioctl.ph';
+    require './sys/ioctl.ph';
 
     ioctl(STDIN,&TIOCGETP,$sgttyb)
         || die "Can't ioctl TIOCGETP: $!";
--- perl-5.24.1/t/uni/title.t
+++ perl-5.24.1/t/uni/title.t
@@ -4,7 +4,7 @@
       print("1..0 # miniperl: no Unicode::Normalize");
       exit(0);
     }
-    require "uni/case.pl";
+    require "./uni/case.pl";
 }
 
 use feature 'unicode_strings';
--- perl-5.24.1/h2pl/cbreak2.pl	Sat Feb 18 19:05:35 2017
+++ perl-5.24.1/h2pl/cbreak2.pl	Sat Jan 14 13:52:22 2017
@@ -11,7 +11,7 @@
 sub set_cbreak {
     local($on) = @_;
 
-    require 'sys/ioctl.pl';
+    require './sys/ioctl.pl';
 
     ioctl(STDIN,$TIOCGETP,$sgttyb)
         || die "Can't ioctl TIOCGETP: $!";
--- perl-5.24.1/t/uni/lower.t
+++ perl-5.24.1/t/uni/lower.t
@@ -4,7 +4,7 @@
       print("1..0 # miniperl: no Unicode::Normalize");
       exit(0);
     }
-    require "uni/case.pl";
+    require "./uni/case.pl";
 }
 
 use feature 'unicode_strings';
--- perl-5.24.1/autodoc.pl	Mon Mar 27 09:23:26 2017
+++ perl-5.24.1/autodoc.pl	Sat Jan 14 14:51:22 2017
@@ -29,8 +29,8 @@
     chdir $workdir
         or die "Couldn't chdir to '$workdir': $!";
 }
-require 'regen/regen_lib.pl';
-require 'regen/embed_lib.pl';
+require './regen/regen_lib.pl';
+require './regen/embed_lib.pl';
 
 #
 # See database of global and static function prototypes in embed.fnc
--- perl-5.24.1/t/uni/case.pl
+++ perl-5.24.1/t/uni/case.pl
@@ -1,5 +1,5 @@
 BEGIN {
-    require "test.pl";
+    require "./test.pl";
     set_up_inc(qw(../lib .));
     skip_all_without_unicode_tables();
 }
--- perl-5.24.1/regen_perly.pl	Mon Mar 27 09:24:48 2017
+++ perl-5.24.1/regen_perly.pl	Sat Jan 14 14:52:29 2017
@@ -35,7 +35,7 @@
 use warnings;
 use strict;
 
-BEGIN { require 'regen/regen_lib.pl'; }
+BEGIN { require './regen/regen_lib.pl'; }
 
 my $bison = 'bison';
 
--- perl-5.24.1/t/run/dtrace.t
+++ perl-5.24.1/t/run/dtrace.t
@@ -136,7 +136,7 @@
     BEGIN {@INC = '../lib'}
     use strict;
     require HTTP::Tiny;
-    do "run/dtrace.pl";
+    do "./run/dtrace.pl";
 PERL_SCRIPT
     << 'D_SCRIPT',
     loading-file { printf("loading-file <%s>\n", copyinstr(arg0)) }
--- perl-5.24.1/t/porting/utils.t
+++ perl-5.24.1/t/porting/utils.t
@@ -22,7 +22,7 @@
 use TestInit qw(T); # T is chdir to the top level
 use strict;
 
-require 't/test.pl';
+require './t/test.pl';
 
 # It turns out that, since the default @INC will include your old 5.x libs, if
 # you have them, the Porting utils might load a library that no longer compiles
--- perl-5.24.1/t/porting/regen.t
+++ perl-5.24.1/t/porting/regen.t
@@ -8,8 +8,8 @@
 use TestInit qw(T A); # T is chdir to the top level, A makes paths absolute
 use strict;
 
-require 'regen/regen_lib.pl';
-require 't/test.pl';
+require './regen/regen_lib.pl';
+require './t/test.pl';
 $::NO_ENDING = $::NO_ENDING = 1;
 
 if ( $^O eq "VMS" ) {
--- perl-5.24.1/t/porting/readme.t
+++ perl-5.24.1/t/porting/readme.t
@@ -10,7 +10,7 @@ BEGIN {
 use TestInit qw(T); # T is chdir to the top level
 use strict;
 use warnings;
-require 't/test.pl';
+require './t/test.pl';
 
 my @porting_files;
 open my $man, "MANIFEST" or die "Can't open MANIFEST: $!";
--- perl-5.24.1/t/porting/pod_rules.t
+++ perl-5.24.1/t/porting/pod_rules.t
@@ -25,7 +25,7 @@ BEGIN {
       chdir '..';
     }
     @INC = qw(lib .); # Special @INC.
-    require 't/test.pl';
+    require './t/test.pl';
 }
 
 use strict;
--- perl-5.24.1/t/porting/pending-author.t
+++ perl-5.24.1/t/porting/pending-author.t
@@ -27,7 +27,7 @@ use TestInit qw(T); # T is chdir to the top level
 use strict;
 use File::Spec;
 
-require 't/test.pl';
+require './t/test.pl';
 find_git_or_skip('all');
 
 my $devnull = File::Spec->devnull;
--- perl-5.24.1/t/porting/manifest.t
+++ perl-5.24.1/t/porting/manifest.t
@@ -30,7 +30,7 @@ BEGIN {
 }
 use TestInit qw(T); # T is chdir to the top level
 
-require 't/test.pl';
+require './t/test.pl';
 
 skip_all("Cross-compiling, the entire source might not be available")
     if $Config{usecrosscompile};
--- perl-5.24.1/t/porting/globvar.t
+++ perl-5.24.1/t/porting/globvar.t
@@ -4,7 +4,7 @@
 use strict;
 use Config;
 
-require 't/test.pl';
+require './t/test.pl';
 
 skip_all("Code to read symbols not ported to $^O")
     if $^O eq 'VMS' or $^O eq 'MSWin32';
--- perl-5.24.1/t/porting/diag.t
+++ perl-5.24.1/t/porting/diag.t
@@ -9,7 +9,7 @@
 use strict;
 use Config;
 
-require 't/test.pl';
+require './t/test.pl';
 
 if ( $Config{usecrosscompile} ) {
   skip_all( "Not all files are available during cross-compilation" );
@@ -26,7 +26,7 @@
 my $make_exceptions_list = ($ARGV[0]||'') eq '--make-exceptions-list'
   and shift;
 
-require 'regen/embed_lib.pl';
+require './regen/embed_lib.pl';
 
 # Look for functions that look like they could be diagnostic ones.
 my @functions;
--- perl-5.24.1/t/porting/corelist.t
+++ perl-5.24.1/t/porting/corelist.t
@@ -6,7 +6,7 @@
 use strict;
 use Config;
 
-require 't/test.pl';
+require './t/test.pl';
 
 plan(tests => 6);
 
--- perl-5.24.1/t/porting/copyright.t
+++ perl-5.24.1/t/porting/copyright.t
@@ -22,7 +22,7 @@
 use TestInit;
 use strict;
 use Config;
-BEGIN { require 'test.pl' }
+BEGIN { require './test.pl' }
 
 if ( $Config{usecrosscompile} ) {
   skip_all( "Not all files are available during cross-compilation" );
--- perl-5.24.1/t/porting/cmp_version.t
+++ perl-5.24.1/t/porting/cmp_version.t
@@ -16,7 +16,7 @@
 use TestInit qw(T A); # T is chdir to the top level, A makes paths absolute
 use strict;
 
-require 't/test.pl';
+require './t/test.pl';
 my $source = find_git_or_skip('all');
 chdir $source or die "Can't chdir to $source: $!";
 
--- perl-5.24.1/t/porting/bench.t
+++ perl-5.24.1/t/porting/bench.t
@@ -8,7 +8,7 @@
 use TestInit qw(T A); # T is chdir to the top level, A makes paths absolute
 use strict;
 
-require 't/test.pl';
+require './t/test.pl';
 my $source = find_git_or_skip('all');
 chdir $source or die "Can't chdir to $source: $!";
 
--- perl-5.24.1/t/porting/authors.t
+++ perl-5.24.1/t/porting/authors.t
@@ -7,7 +7,7 @@
 use TestInit qw(T); # T is chdir to the top level
 use strict;
 
-require 't/test.pl';
+require './t/test.pl';
 find_git_or_skip('all');
 
 # This is the subset of "pretty=fuller" that checkAUTHORS.pl actually needs:
--- perl-5.24.1/t/porting/libperl.t
+++ perl-5.24.1/t/porting/libperl.t
@@ -129,7 +129,7 @@
     }
 }
 
-if ($^O eq 'linux' && $Config{archname} !~ /^x86/) {
+if ($^O eq 'linux' && $Config{archname} !~ /^(?:x|i6)86/) {
     # For example in ppc most (but not all!) code symbols are placed
     # in 'D' (data), not in ' T '.  We cannot work under such conditions.
     skip_all "linux but archname $Config{archname} not x86*";
--- perl-5.24.1/Porting/corelist.pl	Mon Mar 27 10:42:11 2017
+++ perl-5.24.1/Porting/corelist.pl	Mon Mar 20 18:08:38 2017
@@ -21,8 +21,8 @@
 use HTTP::Tiny;
 use IO::Uncompress::Gunzip;
 
-my $corelist_file = 'dist/Module-CoreList/lib/Module/CoreList.pm';
-my $utils_file = 'dist/Module-CoreList/lib/Module/CoreList/Utils.pm';
+my $corelist_file = './dist/Module-CoreList/lib/Module/CoreList.pm';
+my $utils_file = './dist/Module-CoreList/lib/Module/CoreList/Utils.pm';
 
 my %lines;
 my %module_to_file;
--- perl-5.24.1/cpan/Devel-PPPort/devel/mktodo.pl	Mon Mar 27 11:46:27 2017
+++ perl-5.24.1/cpan/Devel-PPPort/devel/mktodo.pl	Sat Jan 14 14:51:28 2017
@@ -22,7 +22,7 @@
 use Config;
 use Time::HiRes qw( gettimeofday tv_interval );
 
-require 'devel/devtools.pl';
+require './devel/devtools.pl';
 
 our %opt = (
   debug   => 0,
--- perl-5.24.1/utils/perlivp.PL	Mon Mar 27 12:22:48 2017
+++ perl-5.24.1/utils/perlivp.PL	Sat Jan 14 14:52:37 2017
@@ -231,7 +231,7 @@
         next if $_ eq 'XS/APItest';
         next if $_ eq 'XS/Typemap';
            # VMS$ perl  -e "eval ""require \""Devel/DProf.pm\"";"" print $@"
-           # \NT> perl  -e "eval \"require 'Devel/DProf.pm'\"; print $@"
+           # \NT> perl  -e "eval \"require './Devel/DProf.pm'\"; print $@"
            # DProf: run perl with -d to use DProf.
            # Compilation failed in require at (eval 1) line 1.
         eval " require \"$_.pm\"; ";
--- perl-5.24.1/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Cygwin.pm	Mon Mar 27 11:46:36 2017
+++ perl-5.24.1/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Cygwin.pm	Sat Jan 14 14:51:40 2017
@@ -86,7 +86,7 @@
     if ($Config{useshrplib} eq 'true') {
         my $libperl = '$(PERL_INC)' .'/'. "$Config{libperl}";
         if( $] >= 5.006002 ) {
-            $libperl =~ s/a$/dll.a/;
+            $libperl =~ s/(dll\.)?a$/dll.a/;
         }
         $self->{PERL_ARCHIVE} = $libperl;
     } else {
--- perl-5.24.1/Makefile.SH	Mon Mar 27 13:29:44 2017
+++ perl-5.24.1/Makefile.SH	Wed Mar 22 10:30:42 2017
@@ -189,6 +189,7 @@
 dynamic_ext_re="lib/auto/re/re.$dlext"
 extra_dep='
 ext/Pod-Functions/pm_to_blib: cpan/Pod-Simple/pm_to_blib cpan/Pod-Escapes/pm_to_blib pod/perlfunc.pod
+cpan/IO-Compress/pm_to_blib: dist/lib/pm_to_blib
 '
 for f in $dynamic_ext; do
     : the dependency named here will never exist
@@ -338,7 +339,7 @@ define?*)
 	$spitshell >>$Makefile <<!GROK!THIS!
 # Macros to invoke a copy of our fully operational perl during the build.
 PERL_EXE = perl\$(EXE_EXT)
-RUN_PERL = \$(LDLIBPTH) \$(RUN) $perl\$(EXE_EXT)
+RUN_PERL = \$(LDLIBPTH) \$(RUN) ./$perl\$(EXE_EXT)
 !GROK!THIS!
 	;;
 *)
--- perl-5.24.1/pp_sys.c
+++ perl-5.24.1/pp_sys.c
@@ -706,8 +706,8 @@ PP(pp_pipe_op)
     if (PerlProc_pipe(fd) < 0)
 	goto badexit;
 
-    IoIFP(rstio) = PerlIO_fdopen(fd[0], "r"PIPE_OPEN_MODE);
-    IoOFP(wstio) = PerlIO_fdopen(fd[1], "w"PIPE_OPEN_MODE);
+    IoIFP(rstio) = PerlIO_fdopen(fd[0], "r" PIPE_OPEN_MODE);
+    IoOFP(wstio) = PerlIO_fdopen(fd[1], "w" PIPE_OPEN_MODE);
     IoOFP(rstio) = IoIFP(rstio);
     IoIFP(wstio) = IoOFP(wstio);
     IoTYPE(rstio) = IoTYPE_RDONLY;
