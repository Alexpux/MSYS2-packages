From 65e334c709c280f2a3bd576b8b99d7016d5c12ca Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Thu, 7 Sep 2017 14:29:35 +0200
Subject: [PATCH 49/N] Refuse to send job control signals to Win32 processes

When calling Win32 processes from MSYS2, it does not really make sense
to kill them when a user tries to suspend them. It is much better to
warn the user that Win32 processes simply cannot be suspended.

This closes https://github.com/git-for-windows/git/issues/1083 and
replaces https://github.com/git-for-windows/build-extra/pull/154

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 winsup/cygwin/exceptions.cc | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/winsup/cygwin/exceptions.cc b/winsup/cygwin/exceptions.cc
index 73a16ac..7b4a163 100644
--- a/winsup/cygwin/exceptions.cc
+++ b/winsup/cygwin/exceptions.cc
@@ -1547,8 +1547,23 @@ exit_sig:
 dosig:
   if (have_execed)
     {
-      sigproc_printf ("terminating captive process");
-      exit_process (ch_spawn, 128 + (sigExeced = si.si_signo));
+      switch (si.si_signo)
+        {
+        case SIGUSR1:
+        case SIGUSR2:
+        case SIGCONT:
+        case SIGSTOP:
+        case SIGTSTP:
+        case SIGTTIN:
+        case SIGTTOU:
+          system_printf ("Suppressing signal %d to win32 process (pid %u)",
+              (int)si.si_signo, (unsigned int)GetProcessId(ch_spawn));
+          goto done;
+        default:
+          sigproc_printf ("terminating captive process");
+          exit_process (ch_spawn, 128 + (sigExeced = si.si_signo));
+          break;
+        }
     }
   /* Dispatch to the appropriate function. */
   sigproc_printf ("signal %d, signal handler %p", si.si_signo, handler);
-- 
2.9.0

