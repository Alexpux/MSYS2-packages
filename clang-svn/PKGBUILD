# Maintainer: Martell Malone <MartellMalone@gmail.com>

_realname=clang
pkgname=("clang-svn"
         #"clang-analyzer-svn"
         #"clang-tools-extra-svn"
         #"compiler-rt-svn"
         #"libc++abi-svn"
         #"libc++-svn"
         "lld-svn"
         "llvm-svn"
        )
pkgver=58484.75109be
pkgrel=1
pkgdesc="C language family frontend for LLVM (mingw-w64)"
arch=('any')
url="http://llvm.org"
license=("custom:University of Illinois/NCSA Open Source License")
makedepends=("gcc" "libffi-devel" "libxml2-devel" "pkg-config" "python2" "tar" "subversion" "git")
depends=("gcc" "libffi" "libxml2")
options=('staticlibs' 'strip')
source=("llvm"::"git+http://llvm.org/git/llvm.git"
        "lld"::"git+http://llvm.org/git/lld.git"
        "clang"::"git+http://llvm.org/git/clang.git"
        #"clang-tools-extra"::"git+http://llvm.org/git/clang-tools-extra.git"
        #"compiler-rt"::"git+http://llvm.org/git/compiler-rt.git"
        #"testsuite"::"git+http://llvm.org/git/test-suite.git"
        #"libcxxabi"::"git+http://llvm.org/git/libcxxabi.git"
        #"libcxx"::"git+http://llvm.org/git/libcxx.git"
        "0001-cmake-hack-for-msys2.patch"
        "0011-Driver-add-support-to-mingw64-for-msys2-host.patch")

md5sums=('SKIP'
         'SKIP'
         'SKIP'
         #'SKIP'
         #'SKIP'
         #'SKIP'
         #'SKIP'
         #'SKIP'
         'f9b9341528eb163960e58b98fe2b0343'
         '60dd4de9163ea24d2498bde51087b5a6')

pkgver_internal() {
  if [ ! -d "$1" ]; then
    plain "No such directory $1"
    exit 1
  fi
  pushd "$1" > /dev/null 2>&1
  printf "%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
  popd > /dev/null 2>&1
}

pkgver() {
  pkgver_internal "${srcdir}"/clang
}

prepare() {
  cd "${srcdir}"/llvm
  git am "${srcdir}"/0001-cmake-hack-for-msys2.patch

  # Fix docs installation directory
  sed -i 's:$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    Makefile.config.in

  # Fix definition of LLVM_CMAKE_DIR in LLVMConfig.cmake
  sed -i '/@LLVM_CONFIG_CMAKE_DIR@/s:$(PROJ_cmake):$(PROJ_prefix)/share/llvm/cmake:' \
    cmake/modules/Makefile

  cd "${srcdir}"/clang
  git am "${srcdir}"/0011-Driver-add-support-to-mingw64-for-msys2-host.patch

  cd "${srcdir}"
  mv lld               llvm/tools/lld
  mv clang             llvm/tools/clang
# mv clang-tools-extra llvm/tools/clang/tools/extra
# mv compiler-rt       llvm/projects/compiler-rt
# mv libcxxabi         llvm/projects/libcxxabi
# mv libcxx            llvm/projects/libcxx
# mv testsuite         llvm/projects/test-suite

}

build() {
  mkdir -p ${srcdir}/build-${CARCH} && cd ${srcdir}/build-${CARCH}

  # Include location of libffi headers in CPPFLAGS
  #CPPFLAGS+=" $(pkg-config --cflags libffi)"
  FFI_INCLUDE_DIR="$(pkg-config --cflags libffi)"
  FFI_INCLUDE_DIR=$(echo $FFI_INCLUDE_DIR | sed 's|-I||g')

  cmake -G"Unix Makefiles" \
    -DCMAKE_MAKE_PROGRAM="/usr/bin/make.exe" \
    -DCMAKE_C_COMPILER="/usr/bin/gcc.exe" \
    -DCMAKE_CXX_COMPILER="/usr/bin/g++.exe" \
    -DFFI_INCLUDE_DIR="${FFI_INCLUDE_DIR}" \
    -DCMAKE_C_FLAGS="${CFLAGS}" \
    -DCMAKE_CXX_FLAGS="${CXXFLAGS} ${CPPFLAGS}" \
    -DCMAKE_INSTALL_PREFIX="/usr" \
    -DCMAKE_BUILD_TYPE=Release \
    -DLLVM_TARGETS_TO_BUILD="ARM;CppBackend;X86;PowerPC" \
    -DLLVM_ENABLE_ASSERTIONS=OFF \
    -DLLVM_ENABLE_THREADS=0 \
    -DPYTHON_EXECUTABLE=/usr/bin/python2 \
    -DLLVM_ENABLE_FFI=ON \
    -DLLVM_ENABLE_SPHINX=OFF \
    ../llvm

#    -DLLVM_ENABLE_SPHINX=ON \
#    -DCMAKE_CXX_FLAGS="-D_GNU_SOURCE -D_LIBCPP_HAS_NO_CONSTEXPR" \
#    -DLIBCXX_ENABLE_SHARED=OFF \
#    -DLIBCXXABI_ENABLE_SHARED=OFF \

  make
}

#check() {
#  cd "${srcdir}"/build-${CARCH}
#  # Remove || true once testcase doesn't cause failures.
#  make check || true
#}

package_clang-svn(){
  pkgdesc="C language family frontend for LLVM (mingw-w64)"
  depends=("llvm-svn")
  provides=("clang")
  conflicts=("clang")
  pkgver=$(pkgver_internal "${srcdir}"/llvm/tools/clang)

  # Move ..
# cd "${srcdir}"
# mv llvm/tools/clang/tools/extra           clang-tools-extra
# mv build-${CARCH}/tools/clang/tools/extra clang-tools-extra-${CARCH}

  cd build-${CARCH}/tools/clang
  make -j1 DESTDIR="$pkgdir" rebuild_cache install

  mkdir -p "${pkgdir}/opt/bin"
  echo "#!/usr/bin/env bash" > ${pkgdir}/opt/bin/i686-w64-mingw32-clang
  echo '/usr/bin/clang -target i686-windows-gnu "$@"' >> ${pkgdir}/opt/bin/i686-w64-mingw32-clang
  echo "#!/usr/bin/env bash" > ${pkgdir}/opt/bin/i686-w64-mingw32-clang++
  echo '/usr/bin/clang++ -target i686-windows-gnu "$@"' >> ${pkgdir}/opt/bin/i686-w64-mingw32-clang++
  echo "#!/usr/bin/env bash" > ${pkgdir}/opt/bin/x86_64-w64-mingw32-clang
  echo '/usr/bin/clang -target x86_64-windows-gnu "$@"' >> ${pkgdir}/opt/bin/x86_64-w64-mingw32-clang
  echo "#!/usr/bin/env bash" > ${pkgdir}/opt/bin/x86_64-w64-mingw32-clang++
  echo '/usr/bin/clang++ -target x86_64-windows-gnu "$@"' >> ${pkgdir}/opt/bin/x86_64-w64-mingw32-clang++
  echo "#!/usr/bin/env bash" > ${pkgdir}/opt/bin/armv7-w64-mingw32-clang
  echo '/usr/bin/clang -target armv7-windows-gnu "$@"' >> ${pkgdir}/opt/bin/armv7-w64-mingw32-clang
  echo "#!/usr/bin/env bash" > ${pkgdir}/opt/bin/armv7-w64-mingw32-clang++
  echo '/usr/bin/clang++ -target armv7-windows-gnu "$@"' >> ${pkgdir}/opt/bin/armv7-w64-mingw32-clang++

  # .. Unmove
# cd "${srcdir}"
# mv clang-tools-extra                      llvm/tools/clang/tools/extra
# mv clang-tools-extra-${CARCH}             build-${CARCH}/tools/clang/tools/extra
}

package_clang-tools-extra(){
  pkgdesc="Extra tools built using Clang's tooling APIs (mingw-w64)"
  url="http://clang.llvm.org/"
  depends=("clang-svn")
  provides=("clang-tools-extra")
  conflicts=("clang-tools-extra")
  pkgver=$(pkgver_internal "${srcdir}"/llvm/tools/clang/tools/extra)

  cd "${srcdir}"/build-${CARCH}/tools/clang/tools/extra
  make -j1 DESTDIR="$pkgdir" rebuild_cache install
}

 package_compiler-rt(){
  pkgdesc="Runtime libraries for Clang and LLVM (mingw-w64)"
  url="http://compiler-rt.llvm.org/"
  depends=("llvm-svn")
  provides=("compiler-rt")
  conflicts=("compiler-rt")
  pkgver=$(pkgver_internal "${srcdir}"/llvm/projects/compiler-rt)

  cd "${srcdir}"/build-${CARCH}/projects/compiler-rt
  make -j1 DESTDIR="$pkgdir" rebuild_cache install
 }

package_libcxxabi(){
  pkgdesc="C++ Standard Library Support (mingw-w64)"
  provides=("libc++abi")
  conflicts=("libc++abi")
  pkgver=$(pkgver_internal "${srcdir}"/llvm/projects/libcxxabi)

  cd "${srcdir}"/build-${CARCH}/projects/libcxxabi
  make -j1 DESTDIR="$pkgdir" rebuild_cache install
}

package_libcxx(){
  pkgdesc="C++ Standard Library (mingw-w64)"
  provides=("libc++")
  conflicts=("libc++")
  pkgver=$(pkgver_internal "${srcdir}"/llvm/projects/libcxx)

  cd "${srcdir}"/build-${CARCH}/projects/libcxx
  make -j1 DESTDIR="$pkgdir" rebuild_cache install
}

package_lld-svn(){
  pkgdesc="Linker tools for LLVM (mingw-w64)"
  depends=("llvm-svn")
  provides=("lld")
  conflicts=("lld")
  pkgver=$(pkgver_internal "${srcdir}"/llvm/tools/lld)

  cd "${srcdir}"/build-${CARCH}/tools/lld
  make -j1 DESTDIR="$pkgdir" rebuild_cache install
}

package_llvm-svn(){
  pkgdesc="Low Level Virtual Machine (mingw-w64)"
  #depends=("gcc") # "compiler-rt"
  provides=("llvm")
  conflicts=("llvm")
  #install=llvm-${CARCH}.install
  pkgver=$(pkgver_internal "${srcdir}"/llvm)

  # Move ..
  cd "${srcdir}"
  mv llvm/tools/clang           clang
  mv build-${CARCH}/tools/clang clang-${CARCH}

  mv llvm/tools/lld             lld
  mv build-${CARCH}/tools/lld   lld-${CARCH}

# mv llvm/projects/compiler-rt             compiler-rt
# mv build-${CARCH}/projects/compiler-rt   compiler-rt-${CARCH}

# mv llvm/projects/libcxxabi               libcxxabi
# mv build-${CARCH}/projects/libcxxabi     libcxxabi-${CARCH}

# mv llvm/projects/libcxx                  libcxx
# mv build-${CARCH}/projects/libcxx        libcxx-${CARCH}

  cd build-${CARCH}
  make -j1 DESTDIR="$pkgdir" install

  # .. Unmove
  cd "${srcdir}"
  mv clang                      llvm/tools/clang
  mv clang-${CARCH}             build-${CARCH}/tools/clang

  mv lld                        llvm/tools/lld
  mv lld-${CARCH}               build-${CARCH}/tools/lld

# mv compiler-rt                llvm/projects/compiler-rt
# mv compiler-rt-${CARCH}       build-${CARCH}/projects/compiler-rt

# mv libcxxabi                  llvm/projects/libcxxabi
# mv libcxxabi-${CARCH}         build-${CARCH}/projects/libcxxabi

# mv libcxx                     llvm/projects/libcxx
# mv libcxx-${CARCH}            build-${CARCH}/projects/libcxx

  # Install CMake stuff
  install -d "${pkgdir}"/usr/share/llvm/cmake/{modules,platforms}
  install -Dm644 "${srcdir}"/llvm/cmake/modules/*.cmake "${pkgdir}/usr/share/llvm/cmake/modules/"
  install -Dm644 "${srcdir}"/llvm/cmake/platforms/*.cmake "${pkgdir}/usr/share/llvm/cmake/platforms/"
  install -Dm644 "${srcdir}/build-${CARCH}"/share/llvm/cmake/LLVMConfig.cmake "${pkgdir}"/usr/share/llvm/cmake/LLVMConfig.cmake
}

package_clang-analyzer() {
  pkgdesc="A source code analysis framework (mingw-w64)"
  url="http://clang-analyzer.llvm.org/"
  depends=("clang-svn" "python2")
  provides=("clang-analyzer")
  conflicts=("clang-analyzer")
  pkgver=$(pkgver_internal "${srcdir}"/llvm/tools/clang)

  cd "${srcdir}"/llvm/tools/clang

  install -d "${pkgdir}"/usr/{bin,lib/clang-analyzer}
  for _tool in scan-{build,view}; do
    cp -r tools/$_tool "${pkgdir}"/usr/lib/clang-analyzer/
    ln -s "${pkgdir}"/usr/lib/clang-analyzer/$_tool/$_tool "${pkgdir}"/usr/bin/
  done

  # scan-build looks for clang within the same directory
  install -d "${pkgdir}"/usr/lib/clang-analyzer/scan-build/
  ln -s "${srcdir}"/build-${CARCH}/bin/clang.exe "${pkgdir}"/usr/lib/clang-analyzer/scan-build/

  # Relocate man page
  install -d "${pkgdir}"/usr/share/man/man1
  mv "${pkgdir}"/usr/lib/clang-analyzer/scan-build/scan-build.1 \
     "${pkgdir}"/usr/share/man/man1/

  # Use Python 2
  #sed -i \
  #  -e 's|env python$|&2|' \
  #  -e 's|/usr/bin/python$|&2|' \
  #  "${pkgdir}"/usr/lib/clang-analyzer/scan-view/scan-view \
  #  "${pkgdir}"/usr/lib/clang-analyzer/scan-build/set-xcode-analyzer

  # Compile Python scripts
  python2 -m compileall "${pkgdir}"/usr/lib/clang-analyzer
  python2 -O -m compileall "${pkgdir}"/usr/lib/clang-analyzer
  install -Dm644 LICENSE.TXT "${pkgdir}"/usr/share/licenses/clang-analyzer/LICENSE
}
